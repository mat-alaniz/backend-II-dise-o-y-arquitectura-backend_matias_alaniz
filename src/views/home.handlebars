<div class="container mt-4">
  <h1 class="text-center mb-4">Listado de Productos</h1>
  
  {{#if products.length}}
    <div class="row">
      {{#each products}}
        <div class="col-md-4 mb-4">
          <div class="card h-100">
            <div class="card-body">
              <h5 class="card-title">{{this.title}}</h5>
              <p class="card-text">
                <strong>Precio:</strong> ${{this.price}}<br>
                <strong>Stock:</strong> {{this.stock}}<br>
                <strong>Categoría:</strong> {{this.category}}
              </p>
            </div>
            <div class="card-footer bg-transparent d-flex justify-content-between align-items-center">
              <small class="text-muted">Código: {{this.code}}</small>
              <button 
                class="btn btn-success btn-sm"
                onclick="addToCart('{{this._id}}')"
              >
                <i class="fas fa-cart-plus"></i> Agregar
              </button>
            </div>
          </div>
        </div>
      {{/each}}
    </div>
  {{else}}
    <div class="alert alert-warning text-center">
      No hay productos disponibles. Agrega uno desde <a href="/realtimeproducts">RealTimeProducts</a>.
    </div>
  {{/if}}

  <div class="text-center mt-4">
    <a href="/realtimeproducts" class="btn btn-primary btn-lg me-2">
      <i class="fas fa-bolt"></i> Productos en Tiempo Real
    </a>
    <a href="/carts/{{cartId}}" class="btn btn-warning btn-lg position-relative">
      <i class="fas fa-shopping-cart"></i> Ver Carrito
      <span id="cartCounter" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
        {{cartItemCount}}
      </span>
    </a>
  </div>

  <div class="text-center mt-4">
    <a href="/register" class="btn btn-outline-primary">Registrarse</a>
  </div>
</div>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://kit.fontawesome.com/your-code.js" crossorigin="anonymous"></script>

<script>
  let cartId = '{{cartId}}'; 

  async function addToCart(productId) {
    try {
    
      if (!cartId) {
        const { value: confirmed } = await Swal.fire({
          title: 'Crear nuevo carrito',
          text: 'No tienes un carrito activo. ¿Deseas crear uno?',
          icon: 'question',
          showCancelButton: true,
          confirmButtonText: 'Sí, crear',
          cancelButtonText: 'Cancelar'
        });

        if (!confirmed) return;

        const response = await fetch('/api/carts', { method: 'POST' });
        const data = await response.json();
        
        if (!response.ok) throw new Error(data.message);
        
        cartId = data.payload._id;
        await Swal.fire('¡Carrito creado!', '', 'success');
      }


      const addResponse = await fetch(`/api/carts/${cartId}/products/${productId}`, { method: 'POST' });

      if (!addResponse.ok) {
        const errorData = await addResponse.json();
        throw new Error(errorData.message);
      }

      
      await updateCartCounter();
      await Swal.fire({
        position: 'top-end',
        icon: 'success',
        title: 'Producto agregado',
        showConfirmButton: false,
        timer: 1500,
        toast: true
      });

    } catch (error) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: error.message || 'No se pudo agregar al carrito',
        footer: 'Intenta nuevamente'
      });
      console.error('Error:', error);
    }
  }

  async function updateCartCounter() {
    try {
      if (!cartId) return;
      
      const response = await fetch(`/api/carts/${cartId}`);
      if (!response.ok) return;
      
      const cart = await response.json();
      const totalItems = cart.payload.products.reduce((sum, item) => sum + item.quantity, 0);
      
      document.getElementById('cartCounter').textContent = totalItems;
    } catch (error) {
      console.error('Error actualizando contador:', error);
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    if (cartId) updateCartCounter();
  });
</script>

<style>
  .badge {
    font-size: 0.75em;
  }
  .card {
    transition: transform 0.2s;
  }
  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
  }
</style>