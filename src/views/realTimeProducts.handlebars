<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5>Agregar Producto</h5>
        </div>
        <div class="card-body">
            <form id="addProductForm">
                <div class="mb-3">
                    <label for="title" class="form-label">Nombre</label>
                    <input type="text" class="form-control" id="title" name="title" required>
                </div>
                <div class="mb-3">
                    <label for="price" class="form-label">Precio</label>
                    <input type="number" class="form-control" id="price" name="price" min="0" step="0.01" required>
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Descripción</label>
                    <textarea class="form-control" id="description" name="description" rows="2" required></textarea>
                </div>
                <button type="submit" class="btn btn-success w-100">Agregar Producto</button>
            </form>
        </div>
    </div>
</div>
<ul id="productsList" class="list-group mb-4">
    {{#each products}}
    <li class="list-group-item" data-id="{{this.id}}">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h5>{{this.title}}</h5>
                <p class="mb-1">{{this.description}}</p>
                <small class="text-muted">Precio: ${{this.price}} | ID: {{this.id}}</small>
            </div>
            <button class="btn btn-danger btn-sm delete-btn" data-id="{{this.id}}">
                Eliminar
            </button>
        </div>
    </li>
    {{/each}}
</ul>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const form = document.getElementById('addProductForm');

    form.addEventListener('submit', (e) => {
        e.preventDefault();
        const title = document.getElementById('title').value;
        const price = parseFloat(document.getElementById('price').value);
        const description = document.getElementById('description').value;

        if (!title || isNaN(price) || !description) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Completa todos los campos correctamente!'
            });
            return;
        }

        socket.emit('addProduct', { 
            title, 
            price, 
            description,
            code: `CODE-${Date.now().toString().slice(-4)}`,
            stock: 10,
            status: true
        });
        
        Swal.fire({
            position: 'top-end',
            icon: 'success',
            title: 'Producto agregado',
            showConfirmButton: false,
            timer: 1500
        });
        
        form.reset();
    });

    document.getElementById('productsList').addEventListener('click', function(e) {
        if (e.target.classList.contains('delete-btn')) {
            const id = e.target.getAttribute('data-id');
            
            Swal.fire({
                title: '¿Estás seguro?',
                text: "¡No podrás revertir esto!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Sí, eliminar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    socket.emit('deleteProduct', id);
                    Swal.fire(
                        '¡Eliminado!',
                        'El producto ha sido eliminado.',
                        'success'
                    );
                }
            });
        }
    });

    socket.on('updateProducts', (products) => {
        const productsList = document.getElementById('productsList');
        productsList.innerHTML = products.map(product => `
            <li class="list-group-item" data-id="${product.id}">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <h5>${product.title}</h5>
                        <p class="mb-1">${product.description}</p>
                        <small class="text-muted">Precio: $${product.price} | ID: ${product.id}</small>
                    </div>
                    <button class="btn btn-danger btn-sm delete-btn" data-id="${product.id}">
                        Eliminar
                    </button>
                </div>
            </li>
        `).join('');
    });
</script>